{{- if .Values.clusterReader.installRbac }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.clusterReader.serviceAccount.name }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "wiz-kubernetes-connector.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    {{- with .Values.clusterReader.serviceAccount.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.clusterReader.serviceAccount.name }}-token
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "wiz-kubernetes-connector.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    kubernetes.io/service-account.name: {{ .Values.clusterReader.serviceAccount.name }}
    {{- with .Values.clusterReader.secret.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.clusterReader.serviceAccount.name }}
  labels:
    {{- include "wiz-kubernetes-connector.labels" . | nindent 4 }}
rules:
{{- if .Values.clusterReader.installLeastPrivileged }}
## Install least privileged (no secrets access) reader permissions
- apiGroups: ["*"]
  resources: [
    "customresourcedefinitions", 
    "nodes", 
    "pods", 
    "services", 
    "ingresses", 
    "endpoints", 
    "roles", 
    "rolebindings", 
    "clusterroles", 
    "clusterrolebindings", 
    "ingressclasses", 
    "replicasets", 
    "daemonsets", 
    "statefulsets", 
    "deployments", 
    "serviceaccounts", 
    "namespaces", 
    "configmaps", 
    "jobs", 
    "cronjobs", 
    "networkpolicies", 
    "controllerrevisions", 
    "podsecuritypolicies", 
    "persistentvolumes", 
    "persistentvolumeclaims", 
    "storageclasses", 
    "dtabs", 
    "tokenreviews", 
    "events", 
    "endpointslices", 
    "iamusergroups", 
    "iamidentitymappings", 
    "iamidentitymappings/status", 
    "subjectaccessreviews", 
    "poddisruptionbudgets", 
    "validatingwebhookconfigurations", 
    "mutatingwebhookconfigurations", 
    "volumesnapshots", 
    "csinodes", 
    "csidrivers", 
    "volumeattachments", 
    "csistoragecapacities", 
    "volumesnapshotcontents", 
    "volumesnapshotclassnames", 
    "leases"
  ]
  verbs: ["get","list","watch"]
- apiGroups: [
    "networking.istio.io", 
    "authentication.istio.io", 
    "rbac.istio.io", 
    "config.istio.io", 
    "security.istio.io", 
    "linkerd.io", 
    "policy.linkerd.io", 
    "crd.projectcalico.org", 
    "apiregistration.k8s.io", 
    "cluster.k8s.io", 
    "k8s.nginx.org", 
    "cis.f5.com"
  ]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
{{- else -}}
## Else install broad readonly access
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.clusterReader.serviceAccount.name }}
  labels:
    {{- include "wiz-kubernetes-connector.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  {{ .Values.clusterReader.serviceAccount.name }}
subjects:
- kind: ServiceAccount
  name: {{ .Values.clusterReader.serviceAccount.name }}
  namespace: {{ .Release.Namespace | quote }}
{{- end }}
